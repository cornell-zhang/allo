# Copyright Allo authors. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

name: "Build documentation"
# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'docs/**'
      - 'tutorials/**'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'docs/**'
      - 'tutorials/**'

jobs:
  build:
    # This job runs on Linux
    runs-on: ubuntu-latest
    container:
      image: chhzh123/llvm-project:18.x
      options: --user root

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Patch LLVM Project
      run: |
        cp externals/llvm_patch /root/llvm-project
        cd /root/llvm-project
        git apply llvm_patch
    - name: Build HCL-MLIR
      run: |
        source activate hcl-dev
        export BUILD_DIR=/root/llvm-project/build
        export PREFIX=/root/llvm-project/build
        git submodule update --init
        cd externals/hcl_mlir
        mkdir -p build && cd build
        cmake -G "Unix Makefiles" .. \
            -DMLIR_DIR=$PREFIX/lib/cmake/mlir \
            -DLLVM_EXTERNAL_LIT=$BUILD_DIR/bin/llvm-lit \
            -DPYTHON_BINDING=ON \
            -DPython3_EXECUTABLE=`which python3` \
            -DCMAKE_CXX_FLAGS="-Wfatal-errors -std=c++17"
        make -j2
        cd tools/hcl/python_packages/hcl_core
        python3 -m pip install . -v
    - name: Build docs
      run: |
        source activate hcl-dev
        export ALLO_HOME=$(pwd)
        export LLVM_BUILD_DIR=/root/llvm-project/build
        export PATH=${LLVM_BUILD_DIR}/bin:${PATH}
        export PYTHONPATH=$ALLO_HOME:${PYTHONPATH}
        export PYTHONPATH=$ALLO_HOME/externals/hcl_mlir/build/tools/hcl/python_packages/hcl_core:${PYTHONPATH}
        python3 -m pip install -r requirements.txt
        cd docs
        python3 -m pip install -r requirements.txt
        make html
    # Create an artifact of the html output using Github action: https://github.com/actions/upload-artifact
    - uses: actions/upload-artifact@v1
      with:
        name: DocumentationHTML
        path: docs/build/html/
    - name: Install rsync
      run: |
        apt-get update && apt-get install -y rsync
    - name: Deploy docs
      uses: JamesIves/github-pages-deploy-action@releases/v3
      if: github.event_name == 'push'
      with:
        ACCESS_TOKEN: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
        BRANCH: gh-pages
        FOLDER: docs/build/html
    - run: touch docs/build/html/.nojekyll
    - name: Deploy docs to website
      uses: cpina/github-action-push-to-another-repository@main
      env:
        SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
      with:
        source-directory: 'docs/build/html'
        destination-github-username: 'chhzh123'
        destination-repository-name: 'allo-docs'
        user-email: hc676@cornell.edu
        target-branch: gh-pages
        target-directory: ""
